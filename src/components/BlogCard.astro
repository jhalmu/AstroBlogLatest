---
export interface Props {
	title: string
	excerpt?: string
	description?: string
	pubDate: Date
	slug: string
	author?: string
	tags?: string[]
	lang?: string
}
const { title, description, pubDate, slug, lang, tags } = Astro.props as Props

// Format date for display
function formatDate(dateStr: string): string {
	try {
		const date = new Date(dateStr)
		const options: Intl.DateTimeFormatOptions = {
			year: 'numeric',
			month: 'short',
			day: 'numeric'
		}
		return date.toLocaleDateString(lang === 'fi' ? 'fi-FI' : 'en-US', options)
	} catch (error) {
		console.error(`Error formatting date for post "${title}":`, error)
		return 'Date unavailable'
	}
}

const formattedDate = formatDate(pubDate.toString())
---

<article
	class='content-start mx-auto max-w-sm overflow-hidden bg-purple-400 transition-shadow duration-300 hover:shadow-xl sm:mx-auto lg:mx-auto lg:w-full'
>
	<div class='p-6'>
		<time datetime={pubDate.toString()} class='mb-2 block text-sm text-purple-100 uppercase'>
			{formattedDate} | {
				(tags ?? []).map((tag) => (
					<span class='px-1 py-1 text-xs text-white transition-colors'>{tag}</span>
				))
			}
		</time>

		<h2 class='mb-3 text-2xl font-bold text-purple-100 transition-colors hover:text-purple-100'>
			<a href={`/blog/${slug}`}>
				{title}
			</a>
		</h2>
		<p class='mb-4 line-clamp-3 text-purple-100'>
			{description}
		</p>
	</div>
</article>
